#include <iostream>
using namespace std;
/* Реализовать структуру для работы со стеками вещественных чисел
и программу с примером работы этой структуры. Стек должен:
удовлетворять правилу Трёх 
содержать методы push(добавление элемента)
pop(удаление элемента)
front(взятие значения первого элемента)
empty(проверка на пустоту) */
struct node{
    int data;
    node* next = NULL;
};
struct stack{
    node* head = NULL;

    stack (int new_data = 0): head (new node){    /* конструктор */
    head->data = new_data;
    }

    stack (const stack &A){    /* конструктор копий */
        head = new node;
        node* p = new node;
        p->data = A.head->data;
        head = p;
        node* temp = A.head->next;
        while (temp){
            p->next = new node;
            p->next->data = temp->data;
            temp = temp->next;
            p = p->next;
        }
    }

    ~stack(){   /* деструктор */
        while(head){
            node* temp = head;
            head = temp->next;
            delete temp;
        }
    }

    void push(int new_data){
        node* temp = new node;
        temp->data = new_data;
        temp->next = head;
        head = temp;
    }

    int front (){
        if (head == NULL)
            return 0;
        node* temp = head;
        head = temp->next;
        int data = temp->data;
        delete temp;
        return data;
    }

    void pop (){
        if (head != NULL){
        node* temp = head;
        head = temp->next;
        delete temp;
        }
    }

    bool empty (){
        if (head != NULL) return false;
        else return true;
    }
};

void Cout(int z){
    if (z == 1){
        cout << "\n" << "\n";
        cout << "ZORK I: The Great ";
        cout << "Underground Empire";
        cout << "\n" << "\n";
    }
}

int main(){
    int z;
    int a = 10;
    cin >> z;
    stack A(a);
    A.push(6);
    A.push(4);
    A.push(5);
    stack B(A);
    B.pop();
    B.pop();
    B.push(z);
    for (int i = 0; i < 4; i++){
        cout << A.front() << " ";
    }
    cout << A.empty();
    cout << "\n";
    for (int i = 0; i < 5; i++){
        cout << B.front() << " ";
    }
    Cout(z);
    cout << B.empty();
    B.pop();
    return 0;
}
