#include <iostream>
using namespace std;
/*  Реализовать класс для работы с очередью символов и программу
с примером работы этого класса. Очередь должна
удовлетворять правилу Трёх
содержать методы push, pop, front, empty. */
/* "Элементы "забираются" из head */
struct node{
    int data;
    node* next = NULL;
};
struct queue{
    node* head = NULL;

    queue (int new_data = 0): head (new node){    /* конструктор */
    head->data = new_data;
    }

    queue (const queue &A){     /* конструктор копий */
        head = new node;
        node* p = new node;
        p->data = A.head->data;
        head = p;
        node* temp = A.head->next;
        while (temp){
            p->next = new node;
            p->next->data = temp->data;
            temp = temp->next;
            p = p->next;
        }
    }

    ~queue(){   /* деструктор */
        while(head){
            node* temp = head;
            head = temp->next;
            delete temp;
        }
    }

    void push(int new_data){
        node* temp = head;
        while (temp->next != NULL)
            temp = temp->next;
        temp->next = new node;
        temp->next->data = new_data;
    }

    int front(){
        if (head == NULL){
            return 0;
        }
        node* temp = head;
        int data = temp->data;
        return data;
    }

    void pop(){
        if (head != NULL){
            node* temp = head;
            head = head->next;
            delete temp;
        }
    }

    bool empty (){
        if (head != NULL) return false;
        else return true;
    }

};

int main(){
    int z;
    cin >> z;
    queue A(3);
    A.push(5);
    A.push(z);
    queue B(A);
    B.pop();
    B.pop();
    cout << B.front();
}
